#!/usr/bin/env python

import argparse
import os, sys

def get_base_cmd():
    return "opt " + \
            "-load $LLVM_ROOT/install/lib/libid-manager.so " + \
            "-load $LLVM_ROOT/install/lib/libbc2bdd.so " + \
            "-load $LLVM_ROOT/install/lib/libcallgraph-fp.so " + \
            "-load $LLVM_ROOT/install/lib/libmbb.so " + \
            "-load $LLVM_ROOT/install/lib/libcfg.so " + \
            "-load $LLVM_ROOT/install/lib/libpreparer.so " + \
            "-load $LLVM_ROOT/install/lib/libslicer-trace.so " + \
            "-load $LLVM_ROOT/install/lib/libmax-slicing.so " + \
            "-load $LLVM_ROOT/install/lib/libint.so " + \
            "-load $LLVM_ROOT/install/lib/libint-test.so "

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description = "Dump integer constraints")
    parser.add_argument("bc",
            help = "the bitcode of the program to be analyzed")
    parser.add_argument("lt",
            help = "the landmark trace (.lt file)")
    args = parser.parse_args()

    cmd = get_base_cmd()
    cmd += "-int-test "
    cmd += "-input-landmark-trace " + args.lt + " "
    cmd += "-disable-output "
    cmd += "< " + args.bc
    print >> sys.stderr, cmd
    os.system(cmd)

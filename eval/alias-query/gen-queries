#!/usr/bin/env python

import os, sys, argparse

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description = "Generate queries")
    parser.add_argument("orig_bc",
            help = "The path to the original bc (with IDs tagged)")
    parser.add_argument("sliced_bc",
            help = "The path to the sliced bc")
    parser.add_argument("query_list",
            help = "The output query list")
    parser.add_argument("--orig", action = "store_true",
            help = "Generate queries for the original program (default: false)")
    parser.add_argument("--cs", action = "store_true",
            help = "Generate context-sensitive queries (default: false)")
    parser.add_argument("--concurrent", nargs = 2,
            metavar = ("full-trace", "landmark-trace"),
            help = "Consider concurrent loads and stores only according to "
            "the full trace and the landmark trace")
    args = parser.parse_args()

    LLVM_ROOT = os.getenv("LLVM_ROOT")
    base_cmd = "opt "
    base_cmd += "-load " + LLVM_ROOT + "/install/lib/libid-manager.so "
    base_cmd += "-load " + LLVM_ROOT + "/install/lib/libbc2bdd.so "
    base_cmd += "-load " + LLVM_ROOT + "/install/lib/libcallgraph-fp.so "
    base_cmd += "-load " + LLVM_ROOT + "/install/lib/libmbb.so "
    base_cmd += "-load " + LLVM_ROOT + "/install/lib/libcfg.so "
    base_cmd += "-load " + LLVM_ROOT + "/install/lib/libslicer-trace.so "
    base_cmd += "-load " + LLVM_ROOT + "/install/lib/libmax-slicing.so "
    base_cmd += "-load " + LLVM_ROOT + "/install/lib/libint.so "
    base_cmd += "-load " + LLVM_ROOT + "/install/lib/libalias-query.so "

    if not args.concurrent:
        # Static queries
        cmd = base_cmd + "-analyze "
        if args.orig:
            cmd += "-for-orig "
        if args.cs:
            cmd += "-cs "
        cmd += "-gen-queries < " + args.sliced_bc + " > " + args.query_list
    else:
        cmd = base_cmd + "-analyze "
        if args.orig:
            cmd += "-for-orig "
        if args.cs:
            cmd += "-cs "
        cmd += "-fulltrace " + args.concurrent[0] + " "
        cmd += "-input-landmark-trace " + args.concurrent[1] + " "
        cmd += "-concurrent "
        cmd += "-gen-queries < " + args.orig_bc + " > " + args.query_list

    print >> sys.stderr, 50 * "="
    print >> sys.stderr, cmd
    print >> sys.stderr, 50 * "="
    os.system(cmd)

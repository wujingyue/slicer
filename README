Notes:

* The slicer is not guaranteed to work with gcc-4.2 or earlier versions. 
* Don't use make -jx. Use some global temporary file. 

1. Check out source code from the git server

Pick a directory as your workspace, e.g. /home/jingyue/Research. From now on,
we denote this directory by $WORKSPACE, but it doesn't have to be an
environmental variable. 

cd $WORKSPACE
git clone git@repair.cs.columbia.edu llvm
git clone git@repair.cs.columbia.edu slicer

Ask Jingyue if you don't have accesses to these repos. 

2. Set environmental variables

Make sure the following variables are set correctly:
LLVM_ROOT=$WORKSPACE/llvm
SLICER_ROOT=$WORKSPACE/slicer
APPS_DIR=$WORKSPACE/apps

To make your life easier, add $LLVM_ROOT/install/bin and $LLVM_ROOT/scripts
to PATH. 

3. Install libraries

sudo apt-get install libbdd-dev libbz2 openjdk-6-jdk libboost-regex-dev shtool

4. Building LLVM 2.7

TODO

You need apply the following patches to fix some bugs in LLVM 2.7: 
$WORKSPACE/llvm/fix-dae.patch
$WORKSPACE/llvm/fix-fppassmanager.patch
$WORKSPACE/llvm/fix-verifier.patch

Some of them are fixed in later versions, but others are not. 

5. Building common modules

cd $LLVM_ROOT
cd bc2bdd
make
make install
cd ..
cd common
./configure --with-llvmsrc=<path to LLVM source code> --with-llvmobj=<path to LLVM object files> --prefix=<path to LLVM installation directory>
make
make install

6. Building Slicer

cd $SLICER_ROOT
./configure --with-llvmsrc=<path to LLVM source code> --with-llvmobj=<path to LLVM object files> --prefix=<path to LLVM installation directory>
make
make install

7. Test Slicer

cd tests
make build
make run

If no crashes or assertion failures, all test cases are passed. 
